<?php
/*
Plugin Name: Custom User Role Editor
*/

// Enqueue custom script for AJAX calls and localize script
function enqueue_custom_script()
{
    wp_enqueue_script('my-custom-script', plugins_url('myrole.js', __FILE__), array('jquery'), '1.0', true);
    wp_localize_script('my-custom-script', 'custom_script_params', array(
        'ajax_url' => admin_url('admin-ajax.php'),
    ));
}
add_action('wp_enqueue_scripts', 'enqueue_custom_script');

// Shortcode for the custom post form
add_shortcode('my_custom_post_form', 'my_custom_post_form');

function my_custom_post_form()
{
    if (is_user_logged_in()) {
        $current_user = wp_get_current_user();

        // if (isset($_POST['submit_user_role_form'])) {
        //     // Handle form submission
        //     $post_id = handle_updated_post_form_submission($current_user);
        //     if ($post_id) {
        //         return '<p>Post submitted successfully!</p>';
        //     } else {
        //         return '<p>Error occurred while submitting post.</p>';
        //     }
        // }

        // Retrieve form data
        $post_title = isset($_POST['post']) ? sanitize_text_field($_POST['post']) : '';
        $post_content = isset($_POST['postcontent']) ? sanitize_textarea_field($_POST['postcontent']) : '';
        $post_category = isset($_POST['category']) ? intval($_POST['category']) : '';
        $user_name = isset($_POST['user_name']) ? sanitize_text_field($_POST['user_name']) : '';
        $user_email = isset($_POST['user_email']) ? sanitize_email($_POST['user_email']) : '';
        $user_password = isset($_POST['user_password']) ? sanitize_text_field($_POST['user_password']) : '';
        $user_message = isset($_POST['user_message']) ? sanitize_textarea_field($_POST['user_message']) : '';

        // Create post object
        $new_post = array(
            'post_title'    => $post_title,
            'post_content'  => $post_content,
            'post_status'   => 'publish',
            'post_author'   => $current_user->ID,
            'post_category' => array($post_category),
            'meta_input'    => array(
                'user_name' =>   $user_name,
                'user_email' => $user_email,
                'user_password' => $user_password,
                'user_message' => $user_message
            )
        );

        // Handle featured image upload
        if (!empty($_FILES['fimage']['name'])) {
            require_once(ABSPATH . 'wp-admin/includes/image.php');
            require_once(ABSPATH . 'wp-admin/includes/file.php');
            require_once(ABSPATH . 'wp-admin/includes/media.php');

            $post_id = wp_insert_post($new_post);

            if (!is_wp_error($post_id)) {
                $attachment_id = media_handle_upload('fimage', $post_id);
                if (is_wp_error($attachment_id)) {
                    return '<p>Error occurred while uploading image.</p>';
                }
                set_post_thumbnail($post_id, $attachment_id);
                update_post_meta($post_id, '_thumbnail_id', $attachment_id);
            }
        }

        if ($post_id) {
            return '<p>Post submitted successfully!</p>';
        } else {
            return '<p>Error occurred while submitting post.</p>';
        }
    }

    ob_start();
?>
    <div class="container d-flex justify-content-center align-items-center">
        <div class="w-100" style="max-width: 500px;">
            <form method="post" class="shadow my-5" id="my_custom_authorbase" enctype="multipart/form-data">
                <div class="container">
                    <div class="mb-3">
                        <label for="post" class="form-label">Post Title: </label>
                        <input type="text" class="form-control" id="post" name="post" required>
                        <input type="hidden" id="post_id" name="post_id">
                    </div>
                    <div class="mb-3">
                        <label for="postcontent" class="form-label">Post Content: </label>
                        <input type="text" class="form-control" id="postcontent" name="postcontent" required>
                    </div>
                    <div class="mb-3">
                        <label for="category" class="form-label">All Categories:</label>
                        <select name="category" id="categories" class="form-control" required>
                            <option value="">Select Category</option>
                            <?php
                            $categories = get_categories();
                            foreach ($categories as $cat) {
                                echo '<option value="' . $cat->term_id . '">' . $cat->name . '</option>';
                            }
                            ?>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="fimage" class="form-label">Featured Image: </label>
                        <input type="file" class="form-control" id="fimage" name="fimage">
                    </div>
                    <div class="mb-3">
                        <label for="username" class="form-label">Username:</label>
                        <input type="text" class="form-control" id="username" name="user_name" required>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="user_email" required>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <input type="password" class="form-control" id="password" name="user_password" required>
                    </div>
                    <div class="mb-3">
                        <label for="message" class="form-label">Message</label>
                        <textarea id="message" name="user_message" class="form-control" required></textarea>
                    </div>

                    <input type="submit" name="submit_user_role_form" value="Submit">
                    <input type="submit" id="submit" class="submit" name="submit_user_role_form" value="Submit" style="display: none;">
                </div>
            </form>
        </div>
    </div>
    <?php
    return ob_get_clean();
}

// function handle_updated_post_form_submission($current_user){

    if (isset($_POST['submit_updated_post_form'])) {
        // Retrieve post data
        $post_id = sanitize_text_field($_POST['post_id']);
        $post_title = sanitize_text_field($_POST['modal_post_title']);
        $post_content = sanitize_textarea_field($_POST['postcontent']);
        $post_category = intval($_POST['category']);
        $user_name = sanitize_text_field($_POST['user_name']);
        $user_email = sanitize_email($_POST['user_email']);
    
        // echo $post_title;
        // exit;
        // $user = wp_get_current_user();
        // $user_id=$user->ID;
        // Create post object
        $new_post = array(
            'ID'            => $post_id, // ID of the post to update
            'post_title'    => $post_title,
            'post_content'  => $post_content,
            'post_author'   => $current_user,
            'post_category' => array($post_category)
        );
        
    
        // Update the post
        $post_id_updated = wp_update_post($new_post);

        if($post_id_updated){
            update_post_meta($post_id, 'user_name', $user_name);
            update_post_meta($post_id, 'user_email', $user_email);
            update_post_meta($post_id, 'category', $post_category);
            
            echo '<p>Message submitted successfully!</p>';
        }else {
            echo '<p>Failed to submit message. Please try again.</p>';
        }
    
        // Check if the post was updated successfully
        if (is_wp_error($post_id_updated)) {
            // There was an error updating the post
            $error_message = $post_id_updated->get_error_message();
            echo "Post could not be updated: $error_message";
        } else {
            // Post was updated successfully
            echo "Post updated successfully with ID: $post_id_updated";
        }
    }
// }


// Shortcode for listing posts with edit and delete options
add_shortcode('my_listing', 'my_custom_listing');

function my_custom_listing()
{
    // Default query arguments
    $args = array(
        'post_type' => 'post',
        'posts_per_page' => 4,
        'paged' => get_query_var('paged', 1),
    );

    // For Searching Logic
    if (isset($_GET['title']) && !empty($_GET['title'])) {
        $args['s'] = sanitize_text_field($_GET['title']);
    }

    // Delete the Post
    if (isset($_POST['delete_post_button'])) {
        $post_id_to_delete = intval($_POST['delete_post_id']);
        if (current_user_can('delete_post', $post_id_to_delete)) {
            $deleted = wp_delete_post($post_id_to_delete, true);
            if ($deleted !== false) {
                echo '<p>Post deleted successfully!</p>';
            } else {
                echo '<p>Error occurred while deleting post.</p>';
            }
        } else {
            echo '<p>You do not have permission to delete this post.</p>';
        }
    }

    // Check if the user is logged in
    $is_user_logged_in = is_user_logged_in();

    if ($is_user_logged_in) {
        $current_user = wp_get_current_user();
        $args['author'] = $current_user->ID;
    } else {
        return '<p>You need to be logged in to view your posts.</p>';
    }

    $query = new WP_Query($args);

    if ($query->have_posts()) {
        ob_start();
    ?>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
        <!-- Search bar -->
        <div class="search-bar mb-3">
            <form method="GET" action="">
                <div class="row mt-4" style="display: flex; justify-content: flex-end;">
                    <div class="col-sm-5" style="display: flex; justify-content: flex-end;">
                        <input type="hidden" name="page" value="<?php echo isset($_GET['page']) ? $_GET['page'] : ''; ?>">
                        <input type="text" class="form-control" id="search" name="title" placeholder="Search..." value="<?php echo isset($_GET['s']) ? $_GET['s'] : ''; ?>">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                </div>
            </form>
            <!-- Table -->
            <table class="table table-light">
                <thead>
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">Title</th>
                        <th scope="col">Author</th>
                        <th scope="col">Categories</th>
                        <th scope="col">Date</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php while ($query->have_posts()) : $query->the_post(); ?>
                        <tr scope="row">
                            <td><?php echo get_the_ID(); ?></td>
                            <td><?php the_title(); ?></td>
                            <td><?php the_author(); ?></td>
                            <td><?php the_category(', '); ?></td>
                            <td><?php echo get_the_date(); ?></td>
                            <td>
                                <button type="button" class="btn btn-primary edit-btn" data-bs-toggle="modal" data-bs-target="#exampleModal" data-post-id="<?php echo get_the_ID(); ?>" data-post-title="<?php echo esc_attr(get_the_title()); ?>" data-post-content="<?php echo esc_attr(get_the_content()); ?>" data-post-category="<?php echo esc_attr(get_the_category()[0]->term_id); ?>" data-user-name="<?php echo esc_attr(get_the_author_meta('user_login')); ?>" data-user-email="<?php echo esc_attr(get_the_author_meta('user_email')); ?>" data-user-message="">
                                    Edit
                                </button>

                                <form method="post" style="display: inline;">
                                    <input type="hidden" name="delete_post_id" value="<?php echo get_the_ID(); ?>">
                                    <input type="submit" name="delete_post_button" value="Delete" class="btn btn-danger">
                                </form>
                            </td>
                        </tr>
                    <?php endwhile; ?>
                </tbody>
            </table>
            <!-- Pagination -->
            <div class="pagination">
                <?php
                // Pagination
                $total_pages = $query->max_num_pages;
                if ($total_pages > 1) {
                    $current_page = max(1, get_query_var('paged'));
                    echo paginate_links(array(
                        'base' => get_pagenum_link(1) . '%_%',
                        'format' => '/page/%#%',
                        'current' => $current_page,
                        'total' => $total_pages,
                        'prev_text' => __('<< prev'),
                        'next_text' => __('next  >>'),
                    ));
                }
                ?>
            </div>
            <!-- Modal -->
            <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Edit Post</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form method="post" class="shadow my-5" id="my_custom_authorbase" enctype="multipart/form-data">
                                <input type="hidden" id="post_id" name="post_id" value="<?php echo get_the_ID(); ?>">

                                <div class="container">
                                    <div class="mb-3">
                                        <label for="modal_post" class="form-label">Post Title: </label>
                                        <input type="text" class="form-control" id="modal_post" name="modal_post_title" value="<?php echo get_the_title();?>" required>

                                    </div>
                                    <div class="mb-3">
                                        <label for="postcontent" class="form-label">Post Content: </label>
                                        <input type="text" class="form-control" id="postcontent" name="postcontent" value="<?php echo esc_attr(get_the_content()); ?>" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="category" class="form-label">All Categories:</label>
                                        <select name="category" id="categories" value="" class="form-control"  required>
                                            <option value="">Select Category</option>
                                            <?php
                                            $categories = get_categories();
                                            foreach ($categories as $cat) {
                                                echo '<option value="' . $cat->term_id . '">' . $cat->name . '</option>';
                                            }
                                            ?>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="fimage" class="form-label">Featured Image: </label>
                                        <input type="file" class="form-control" id="fimage" name="fimage" value="">
                                    </div>
                                    <div class="mb-3">
                                        <label for="username" class="form-label">Username:</label>
                                        <input type="text" class="form-control" id="username" name="user_name"  value="" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email</label>
                                        <input type="email" class="form-control" id="email" name="user_email" value="" required>
                                    </div>


                                    <!-- <script>
                                    alert('ui');
                                </script> -->
                                    <input type="submit" id="update" class="update" name="submit_updated_post_form" value="Update">

                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <?php
        return ob_get_clean();
    } else {
        return '<p>No posts found.</p>';
    }
}

